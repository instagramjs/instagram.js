import { flows2OpenAPI } from "@instagramjs/flows2openapi";
import fs from "fs";
import openapiTS, { astToString, type OpenAPI3 } from "openapi-typescript";
import path from "path";
import yaml from "yaml";

const FLOWS_JSON_FILE = path.join(
  import.meta.dirname,
  "..",
  "..",
  "..",
  "reverse-engineering",
  "flows_json.out",
);
const OPENAPI_DEF_FILE = path.join(import.meta.dirname, "..", "openapi.yaml");
const OPENAPI_TS_FILE = path.join(
  import.meta.dirname,
  "..",
  "src",
  "schema.ts",
);

const API_PREFIX = "https://graph.instagram.com";

const HEADER = `/**
 * This file was generated by scripts/gen-openapi.ts
 * Do not edit this file manually.
 */

/* eslint-disable */
/* prettier-ignore */

`;

async function main() {
  try {
    await fs.promises.access(FLOWS_JSON_FILE, fs.constants.F_OK);
  } catch {
    console.error(`Flows JSON dump does not exist at ${FLOWS_JSON_FILE}`);
    process.exit(1);
  }
  const jsonDump = await fs.promises.readFile(FLOWS_JSON_FILE, "utf-8");

  let existingDef: OpenAPI3 | null = null;
  try {
    existingDef = yaml.parse(
      await fs.promises.readFile(OPENAPI_DEF_FILE, "utf-8"),
    );
  } catch {
    // ignore
  }

  const def = await flows2OpenAPI(jsonDump, existingDef, {
    apiPrefix: API_PREFIX,

    filterExample: () => false,
    filterResponse: ({ request }) => !request.path.includes("bloks"),
  });

  await fs.promises.writeFile(OPENAPI_DEF_FILE, yaml.stringify(def));

  const ast = await openapiTS(def);
  const schemaCode = astToString(ast);

  await fs.promises.writeFile(OPENAPI_TS_FILE, HEADER + schemaCode);
}

main();
